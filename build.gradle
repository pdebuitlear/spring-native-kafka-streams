plugins {
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$springDependencyVersion"
    id 'org.springframework.experimental.aot' version '0.9.1'
    id 'com.commercehub.gradle.plugin.avro-base' version '0.21.0'
    id 'java'
    id 'idea'
}

group = 'com.sample'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url confluentUrl }
    maven { url springSnapshots }
    maven { url springReleases }
}


//Intellij wasn't seeing generated java
def generatedSourcesDir = file('src/generated/main/java')
idea {
    module {
        sourceDirs += generatedSourcesDir
        generatedSourceDirs += generatedSourcesDir
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'

    implementation('org.springframework.boot:spring-boot-starter-web') {
       exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-core'
       exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-websocket'
    }

    implementation 'org.apache.tomcat.experimental:tomcat-embed-programmatic:9.0.44'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation ('org.springframework.cloud:spring-cloud-kubernetes-fabric8-config') {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-loadbalancer'
    }

    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.springframework.kafka:spring-kafka'

    implementation group: 'org.apache.avro', name: 'avro', version: '1.10.1'
    implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.5.1'
    implementation group: 'io.confluent', name: 'kafka-streams-avro-serde', version: '5.5.1'


    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

test {
    useJUnitPlatform()
}

def generateAvro = tasks.register("generateAvro", com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/main/avro")
    outputDir = file("src/generated/main/java")
    fieldVisibility = "PRIVATE"
    enableDecimalLogicalType = true
}

tasks.named("compileJava").configure {
    source(generateAvro)
}

clean {
    delete "${rootDir}/src/generated/main/java"
}

bootBuildImage {
    builder = "paketobuildpacks/builder:tiny"
    environment = [
            "BP_NATIVE_IMAGE" : "true",
            "BP_NATIVE_IMAGE_BUILD_ARGUMENTS" : "-H:+AddAllCharsets --enable-url-protocols=http,https"
    ]
    imageName = "${project.name}:latest"
}
